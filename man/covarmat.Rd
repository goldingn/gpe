% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/covarmat_class.R
\name{covarmat}
\alias{covarmat}
\alias{image.covarmat}
\alias{is.covarmat}
\alias{palPuRd}
\title{gpe covariance matrix class}
\usage{
is.covarmat(x)

\method{image}{covarmat}(x, axes = TRUE, legend = TRUE,
  col = palPuRd(100), ...)

palPuRd(n)
}
\arguments{
\item{x}{an object of class \code{covarmat}, or an object to be tested as one.}

\item{axes}{whether to add axes to the image plot of \code{x}.}

\item{legend}{whether to add a legend to the image plot of \code{x}.}

\item{col}{colour table used to plot the image}

\item{n}{length of the continuous colour vector required}

\item{\dots}{other arguments to be passed to lower-level functions, such as 
image.}
}
\description{
Generic functions associated with the covarmat class.
}
\details{
\code{is.covarmat} returns a logical indicating whether the 
object is a gpe \code{covarmat} object and \code{image.covarmat} provides 
a nice plot of the values in the covariance matrix; in the style of, and 
depending on \code{\link{image.plot}}. \code{palPuRd} uses the PuRd color
palette from \code{\link{RColorBrewer}} to produce a non-divergent colour
palette for visualising these matrices.
}
\examples{
 
# construct a kernel with one feature
k1 <- rbf('a')

# create a fake dataframe
df <- data.frame(a = sort(runif(50, -3, 3)))
 
# evaluate the kernel
K <- k1(df)


# is it a covarmat object? 
is.covarmat(K)
 

# visualise it 
image(K)

# create a new dataframe
df2 <- data.frame(a = sort(runif(100, -3, 3)))

# visualise the covariance matrix between the two dataframes
image(k1(df, df2))


# visualise the covariance matrix between these dataframes using
# the purple-red colour scheme (actually the default) but with fewer levels
image(k1(df, df2), col = palPuRd(10))

}

