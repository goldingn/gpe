% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gp_class.R
\name{gp}
\alias{gp}
\alias{print.gp}
\title{Gaussian process models}
\usage{
gp(formula, data, family = gaussian, weights = NULL, mean_function = NULL,
  inducing_data = NULL, inference = c("default", "full", "FITC", "Laplace"),
  hyperinference = c("default", "BFGS", "BFGSrestarts", "none"),
  verbose = FALSE)

\method{print}{gp}(x, ...)
}
\arguments{
\item{formula}{an object of class \code{\link{formula}} giving a symbolic 
description of the model to be fitted - the right hand side must be a 
valid kernel object or the commands to construct one.}

\item{data}{a data frame containing the covariates against which to model 
the response variable. This must have the same number of rows as 
\code{response} and contain named variables matching those referred to by
\code{kernel}.}

\item{family}{a \code{\link{family}} object giving the likelihood and link 
function to be used to fit the model. Currently only \code{gaussian}, 
\code{poisson} and \code{binomial} (only Bernoulli) are supported.}

\item{weights}{an optional vector of 'prior weights' to be used in 
the fitting process. Should be NULL or a numeric vector.}

\item{mean_function}{an optional function specifying the prior over the mean
of the gp, in other words a 'first guess' at what the true function is.
This must act on a dataframe with named variables matching some of those in 
\code{data} and return a vector giving a single value for each row in the 
dataframe. Note that this function must return a prediction on the scale of 
the link, rather than the response. If \code{NULL} then a prior mean is 
assumed to be 0 for all observations.}

\item{inducing_data}{an optional dataframe containing the locations of 
inducing points to be used when carrying out sparse inference (e.g. FITC).
This must contain variables with names matching those referenced by 
\code{kernel} and \code{mean_function}. This should have fewer rows than 
\code{data} and \code{response}.}

\item{inference}{a string specifying the inference method to be used to 
estimate the values of the latent parameters. If \code{'default'} an 
appropriate method is picked for the likelihood specified. See details 
section for the list of default inference methods.}

\item{hyperinference}{the method to be used for inference on the 
hyperparameters (parameters of the kernel). \code{BFGS} carries out
straightforward optimisation starting from the current kernel 
parameters using gradient-free BFGS. Because the likelihood surface is
rarely convex, this is is not advised for general use. \code{BFGSrestarts}
runs gradient-free BFGS 5 times, each starting with a different randomly 
chosen set of parameters, which might be a bit better. \code{none} does
no inference on the hyperparameters. \code{default} currently switches to 
\code{none} in all cases, though in future it may depend on other arguments.}

\item{verbose}{whether to return non-critical information to the user 
during model fitting.}

\item{x}{an object of class \code{gp}, constructed by the function \code{gp}
giving a fitted gaussian process model}

\item{\dots}{additional arguments for compatibility with generic functions}
}
\value{
A fitted gp object for which there aren't yet any associated 
functions. But there will be.
}
\description{
Fitting, summarizing and predicting from Gaussian process 
models using a range of inference methods.
}
\details{
The default inference method for a model with the family 
\code{gaussian(link = 'identity')} is full direct inference (\code{'full'}),
for \code{binomial(link = 'logit')} and \code{binomial(link = 'probit')}
the default is full Laplace inference (\code{'Laplace'}; though note that 
only Bernoulli data is handled at the moment). Sparse inference can be 
carried out by specifying \code{inference = 'FITC'}, this is currently only
available for a model with a Gaussian likelihood.
}
\examples{
# make some fake data
n <- 100  # observations
m <- 10  # inducing points

# dataframes
df <- data.frame(x = sort(runif(n, -5, 5)))
inducing_df <- data.frame(x = sort(runif(m, -5, 5)))
prediction_df <- data.frame(x = seq(min(df$x), max(df$x), len = 500))

# fake Gaussian response data
f <- sin(df$x)
y <- rnorm(n, f, 1)

# fit a full (non-sparse) GP model (without updating the hyperparameters) 
# as this is the default. Notice we add the observation error to the kernel.
m1 <- gp(y ~ rbf('x') + iid(), df, gaussian)

# fit another with FITC sparsity
m2 <- gp(y ~ rbf('x') + iid(), df, gaussian, inference = 'FITC', 
         inducing_data = df)
         
# summary stats, other associated functions still to come

# construct a poisson response variable
y2 <- rpois(n, exp(f))

# fit a GP model by Laplace approximation
# (note no observation error in this model)
m3 <- gp(y2 ~ rbf('x'), df, poisson)


print(m3)
m3

}

